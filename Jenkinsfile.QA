pipeline {
    agent any
    environment {
    	WORKDIR = "./spring-boot-samples/spring-boot-sample-web-ui"
        NEXUS_VERSION = 'nexus3'
        NEXUS_PROTOCOL = 'http'
        NEXUS_URL = "localhost:8081"
        NEXUS_DOCKER_URL = "localhost:8082"
        NEXUS_DOCKER_EXT_URL = "172.31.40.122:8082"
        NEXUS_REPOSITORY = "GrW"
        NEXUS_CREDENTIAL_ID = "6f6c7b81-b8ac-4229-a669-fd7701a03500"
        host_ssh_creds = "901106e2-c876-49b7-af09-1d88e9fd6212"
        nexus_creds = credentials("6f6c7b81-b8ac-4229-a669-fd7701a03500")
        ARTIFACTPATH = "./spring-boot-samples/spring-boot-sample-web-ui/target/spring-boot-sample-web-ui-2.1.16.BUILD-SNAPSHOT.jar"
    }
	stages {
	    stage('Build #') {
	        steps {
	          script{
	            jobs = sh(
    			      script: 'docker image ls localhost:8082/grw --format  "{{ .Tag }}" ',
    			      returnStdout: true,
    			      ).trim()
    			def buildN = input(
    			    id: 'userInput', 
    			    message: 'Select build to deploy', 
    			    parameters: [ [
    			      $class: 'ChoiceParameterDefinition', 
    			      choices: "${jobs}", 
    			      description: '', 
    			      name: 'BuildN' 
    			    ] ]
    		    )
    		    buildNum = "{buildN}"
    		  }
    		}
	    }
    	stage('Port Number input') {
    		steps {
    		// input('Do you want to proceed?')
    			script {
    				def port = input(
    					id:				'portnumber',
    					message: 		'Enter Port Number JAVA_APP will listen on, 1000-65535',
    					parameters : [string(	
    						name:'number',
    						defaultValue: 	'8090'
    					)]
    				)
    				PN = "${port}"			    	
    				echo "${port}"
    				}
    					}    	}
        stage ('Deploy to QA') {
        	steps {
					echo "${PN}"
        	        ansiColor('xterm') {
        			ansiblePlaybook([
        			    playbook: './ci-playbook.yml',
        				inventory: './hosts.ini',
        				credentialsId: "${host_ssh_creds}",
        				become: true,
        				becomeUser: 'ec2-user',
        				sudoUser: 'ec2-user',
        				colorized: true,
        				disableHostKeyChecking: true,
        				extraVars : [
          					"deployType": "QA",
          					"build_Number": "${buildNum}",
          					"src_image": "${NEXUS_DOCKER_EXT_URL}/grw:${buildNum}",
          					"port_number": "${PN}"
          				]
          			])
        		}
        	}
        }
    }
}


